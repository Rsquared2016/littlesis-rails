#!/usr/bin/env -S rails runner
# frozen_string_literal: true

options = {}

OptionParser.new do |opts|
  opts.banner = 'Usage: --cik [CIK NUMBER] [options]'

  opts.on('-c', '--cik=CIK', "The company's CIK number")
  opts.on('--forms [FORMS]', Array, 'comma separated list of forms')
  opts.on('-p', '--print', 'output list of forms')
  opts.on('--roster', 'output a list roster of names found on filings')
  opts.on('--json', 'outputs json (when combined with --roster)')
  opts.on('--path [DATABASE]', 'path to sec filings database')
  opts.on('--list-example-ciks', 'print list of example ciks to use')
end.parse!(into: options)

if options[:'list-example-ciks']
  Sec::CIKS.each { |ticker, cik| puts "#{ticker}\t#{cik}" }
  exit
end

raise OptionParser::MissingArgument.new('CIK') if options[:cik].nil?

if /\A[A-Z]+\Z/.match? options[:cik]
  options[:cik] = Sec::CIKS.fetch(options[:cik])
end

options[:cik] = options[:cik].rjust(10, '0')

db = Sec::FilingsDb.new options.slice(:forms, :path)

if options[:print] && options[:forms]
  Sec::FilingsDb.print(db.filings_for(options[:cik]),
                       fields: %i[form_type date_filed filename])
elsif options[:roster]
  roster = Sec::Company.new(options[:cik], db: db).roster

  if options[:json]
    puts JSON.pretty_generate(roster)
  else
    spreadsheet = roster.spreadsheet

    puts spreadsheet.first.keys.join("\t")
    spreadsheet.each { |x| puts x.values.join("\t") }
  end
end

db.close
